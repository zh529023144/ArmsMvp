if (isNeedCaseModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}



android {
    compileSdkVersion rootProject.ext.android["compileSdkversions"]
    buildToolsVersion rootProject.ext.android["buildToolsversions"]
    useLibrary 'org.apache.http.legacy'


    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        if (isNeedCaseModule.toBoolean()) {
            applicationId "com.xinghuo.component.casemodule"
        }


        minSdkVersion rootProject.ext.android["minSdkversions"]
        targetSdkVersion rootProject.ext.android["targetSdkversions"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.versionsName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


        multiDexEnabled true

        //路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]

            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {
        main {
            if (isNeedCaseModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude '*module'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    //    implementation 'com.android.support:appcompat-v7:26.0.0-beta1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:27.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    //公共依赖包
    implementation project(':commonlib')

    annotationProcessor(rootProject.ext.dependencies["dagger2-compiler"]) {
        exclude module: 'support-annotations'
    }
    annotationProcessor(rootProject.ext.dependencies["dagger2-android-processor"]) {
        exclude module: 'support-annotations'
    }
    annotationProcessor(rootProject.ext.dependencies["arouter-compiler"]) {
        exclude module: 'support-annotations'
    }
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }

}
