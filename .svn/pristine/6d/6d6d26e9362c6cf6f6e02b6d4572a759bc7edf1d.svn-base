apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkversions"]
    buildToolsVersion rootProject.ext.android["buildToolsversions"]
    useLibrary 'org.apache.http.legacy'


    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.xinghuo.component"
        minSdkVersion rootProject.ext.android["minSdkversions"]
        targetSdkVersion rootProject.ext.android["targetSdkversions"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.versionsName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        //路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]

            }
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:27.+'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    annotationProcessor(rootProject.ext.dependencies["dagger2-compiler"]) {
        exclude module: 'support-annotations'
    }
    annotationProcessor(rootProject.ext.dependencies["dagger2-android-processor"]) {
        exclude module: 'support-annotations'
    }
    annotationProcessor(rootProject.ext.dependencies["arouter-compiler"]) {
        exclude module: 'support-annotations'
    }
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }

    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]

    //列表模块
    if (!isNeedListModule.toBoolean()) {
        implementation project(':module_list')
    }
    //频道模块
    if (!isNeedChannelModule.toBoolean()) {
        implementation project(':module_channel')
    }
    //地图模块
    if (!isNeedMapModule.toBoolean()) {
        implementation project(':module_map')
    }
    //案件模块
    if (!isNeedCaseModule.toBoolean()) {
        implementation project(':module_case')
    }
    //我的模块
    if (!isNeedMineModule.toBoolean()) {
        implementation project(':module_mine')
    }

    //公共依赖包
    implementation project(':commonlib')

}
